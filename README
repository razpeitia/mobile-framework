==================
MOBILE API SUMMARY
==================
Details:
* api_ prefix, maps to specific function.
* _(), maps to URLs.
* response are json.
* each api call need clientID and accessToken (except first call of api_init)
* SecretKey is given on client registration, used for signature/validation 
  process and never passed through network. store the SecretKey.
* accessToken is given on client registration, used to authenticate user loged in.
  should be stored and updated after login/logout process.
* request are signed, unless not specified with a `signed` keyword.
* api.php, central entry for all request

api.php params:
* api_m, method/function to call
* api_c, clientID
* api_s, accessToken
* api_sig, signature (md5)
* api_v, api version
* a=value&b=value, parameters for called method

To sign request:
* md5 (url_parameters, accessToken, clientID, secretKey, apiKey)

To verify response:
* signed_request == md5(data, accessToken, clientID, secretKey);

Not provided:
* params builder (param=value&var=val)
* md5 function
* http request
* error handling, generic handling process for all type of error 
  (successful, api specific, permissions, file upload, session timeout)

=====================
FRAMEWORK ABSTRACTION
=====================
Legend:
signed = require signature, otherwise not required
  POST = parameter allowed in POST method only
   GET = parameter allowed in GET method only
    GP = parameter allowed in either POST or GET method
   < > = optional paramater
   {,} = one of the following
   [,] = an array of parameters
   (,) = group of parameters

Level 4
* login/logout process
* user registration
* client registration
* user search

Level 3
? human verification
* signed api_usersearch( POST fragment )
* signed login_login( POST vb_login_username, 
              POST {vb_login_password, vb_login_md5password, vb_login_md5password_utf},
              <POST logintype> )
* login_logout()
* login_lostpw()
* signed login_resetpassword( GP activationid, GP userid )
* signed register()
* signed register_checkdate( POST month, POST year, POST day )
* signed register_addmember( POST agree, POST username, POST email, POST emailconfirm,
                             POST {password, password_md5},
                             POST {passwordconfirm, passwordconfirm_md5}, 
                             if COPPA (POST month, POST year, POST day),
                             if COPPA AND age < 13 (POST parentmail), 
                             if HUMAN_VERIFY (POST humanverify),
                             <POST options [adminemail, showemail]>, <POST referrername>, 
                             <POST timezoneoffset>, <POST dst>, <POST userfield>, 
                             <POST showbirthday> )
* signed forum()
* signed forumdisplay( GET forumid, <GET perpage>, <GET pagenumber>, <GET daysprune>,
                       <GET sortfield>, <GET sortorder>, <GET prefixid>, <GP forumpwdmd5> )
* signed threadtag_manage( GP contenttype, GP contentid )
* signed threadtag_managetags( GP contenttype, GP contentid, POST tagsshown, 
                               POST tagskept, POST taglist )
* signed misc_buddylist()
* signed misc_showattachments( GP threadid )
* signed misc_whoposted( GP threadid )

Level 2
* error handling
* response verification
* api_init(clientname, clientversion, platformname, platformversion, uniqueid)
? build request

Level 1
* http request (get/post)
